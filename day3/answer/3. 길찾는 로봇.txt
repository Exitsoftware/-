#include <stdio.h>

int map[12][12]={0};
int total_count=0;

void travel(int x, int y, int count) {
	int direction = map[x][y];
	if(map[x][y]==0) {
		printf("%d step(s) to exit\n", count-1);
		return;
	}
	if(map[x][y]>0) {
		printf("%d step(s) before a loop of %d step(s)\n", map[x][y]-1, total_count-map[x][y]+1);
		return;
	}
		
	map[x][y]=count;
	total_count++;

	if(direction == -1)
		travel(x-1, y, count+1);
	else if(direction == -2)
		travel(x, y+1, count+1);
	else if(direction == -3)
		travel(x+1, y, count+1);
	else if(direction == -4)
		travel(x, y-1, count+1);
}

int main()
{

	int itr;
	int nCount;		/* 문제의 테스트 케이스 */

	scanf("%d", &nCount);	/* 테스트 케이스 입력 */

	for(itr=0; itr<nCount; itr++)
	{

		printf("#testcase%d\n",itr+1);
		int r, c, s;
		char input[12];
		
		scanf("%d %d %d", &r, &c, &s);

		for(int i=1; i<=r; i++) {
			scanf("%s", input);

			for(int j=0; j<c; j++) {
				if(input[j] == 'N')
					map[i][j+1]=-1;
				else if(input[j] == 'E')
					map[i][j+1]=-2;
				else if(input[j] == 'S')
					map[i][j+1]=-3;
				else if(input[j] == 'W')
					map[i][j+1]=-4;
			}
		}

		travel(1,s,1);
		total_count=0;
		for(int i=0; i<12; i++)
			for(int j=0; j<12; j++)
				map[i][j]=0;
	}

	return 0;	/* 반드시 return 0으로 해주셔야합니다. */ 

}